"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/taggedTemplateLiteral"));

var _react = _interopRequireDefault(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _styledComponents2 = require("../../common/styled-components");

var _datasetTitle = _interopRequireDefault(require("./dataset-title"));

var _datasetInfo = _interopRequireDefault(require("./dataset-info"));

function _templateObject() {
  var data = (0, _taggedTemplateLiteral2["default"])(["\n  transition: ", ";\n"]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

var SourceDataCatalogWrapper = _styledComponents["default"].div(_templateObject(), function (props) {
  return props.theme.transition;
});

SourceDataCatalogFactory.deps = [_datasetTitle["default"], _datasetInfo["default"]];

function SourceDataCatalogFactory(DatasetTitle, DatasetInfo) {
  var SourceDataCatalog = function SourceDataCatalog(_ref) {
    var datasets = _ref.datasets,
        showDatasetTable = _ref.showDatasetTable,
        removeDataset = _ref.removeDataset,
        onTitleClick = _ref.onTitleClick,
        _ref$showDeleteDatase = _ref.showDeleteDataset,
        showDeleteDataset = _ref$showDeleteDatase === void 0 ? false : _ref$showDeleteDatase;
    return /*#__PURE__*/_react["default"].createElement(SourceDataCatalogWrapper, {
      className: "source-data-catalog"
    }, Object.values(datasets).map(function (dataset, index) {
      return /*#__PURE__*/_react["default"].createElement(_styledComponents2.SidePanelSection, {
        key: dataset.id
      }, /*#__PURE__*/_react["default"].createElement(DatasetTitle, {
        showDatasetTable: showDatasetTable,
        showDeleteDataset: showDeleteDataset,
        removeDataset: removeDataset,
        dataset: dataset,
        onTitleClick: onTitleClick
      }), showDatasetTable ? /*#__PURE__*/_react["default"].createElement(DatasetInfo, {
        dataset: dataset
      }) : null);
    }));
  };

  return SourceDataCatalog;
}

var _default = SourceDataCatalogFactory;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL3NpZGUtcGFuZWwvY29tbW9uL3NvdXJjZS1kYXRhLWNhdGFsb2cuanMiXSwibmFtZXMiOlsiU291cmNlRGF0YUNhdGFsb2dXcmFwcGVyIiwic3R5bGVkIiwiZGl2IiwicHJvcHMiLCJ0aGVtZSIsInRyYW5zaXRpb24iLCJTb3VyY2VEYXRhQ2F0YWxvZ0ZhY3RvcnkiLCJkZXBzIiwiRGF0YXNldFRpdGxlRmFjdG9yeSIsIkRhdGFzZXRJbmZvRmFjdG9yeSIsIkRhdGFzZXRUaXRsZSIsIkRhdGFzZXRJbmZvIiwiU291cmNlRGF0YUNhdGFsb2ciLCJkYXRhc2V0cyIsInNob3dEYXRhc2V0VGFibGUiLCJyZW1vdmVEYXRhc2V0Iiwib25UaXRsZUNsaWNrIiwic2hvd0RlbGV0ZURhdGFzZXQiLCJPYmplY3QiLCJ2YWx1ZXMiLCJtYXAiLCJkYXRhc2V0IiwiaW5kZXgiLCJpZCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFvQkE7O0FBQ0E7O0FBRUE7O0FBQ0E7O0FBQ0E7Ozs7Ozs7Ozs7OztBQUVBLElBQU1BLHdCQUF3QixHQUFHQyw2QkFBT0MsR0FBVixvQkFDZCxVQUFBQyxLQUFLO0FBQUEsU0FBSUEsS0FBSyxDQUFDQyxLQUFOLENBQVlDLFVBQWhCO0FBQUEsQ0FEUyxDQUE5Qjs7QUFJQUMsd0JBQXdCLENBQUNDLElBQXpCLEdBQWdDLENBQUNDLHdCQUFELEVBQXNCQyx1QkFBdEIsQ0FBaEM7O0FBRUEsU0FBU0gsd0JBQVQsQ0FBa0NJLFlBQWxDLEVBQWdEQyxXQUFoRCxFQUE2RDtBQUMzRCxNQUFNQyxpQkFBaUIsR0FBRyxTQUFwQkEsaUJBQW9CO0FBQUEsUUFDeEJDLFFBRHdCLFFBQ3hCQSxRQUR3QjtBQUFBLFFBRXhCQyxnQkFGd0IsUUFFeEJBLGdCQUZ3QjtBQUFBLFFBR3hCQyxhQUh3QixRQUd4QkEsYUFId0I7QUFBQSxRQUl4QkMsWUFKd0IsUUFJeEJBLFlBSndCO0FBQUEscUNBS3hCQyxpQkFMd0I7QUFBQSxRQUt4QkEsaUJBTHdCLHNDQUtKLEtBTEk7QUFBQSx3QkFPeEIsZ0NBQUMsd0JBQUQ7QUFBMEIsTUFBQSxTQUFTLEVBQUM7QUFBcEMsT0FDR0MsTUFBTSxDQUFDQyxNQUFQLENBQWNOLFFBQWQsRUFBd0JPLEdBQXhCLENBQTRCLFVBQUNDLE9BQUQsRUFBVUMsS0FBVjtBQUFBLDBCQUMzQixnQ0FBQyxtQ0FBRDtBQUFrQixRQUFBLEdBQUcsRUFBRUQsT0FBTyxDQUFDRTtBQUEvQixzQkFDRSxnQ0FBQyxZQUFEO0FBQ0UsUUFBQSxnQkFBZ0IsRUFBRVQsZ0JBRHBCO0FBRUUsUUFBQSxpQkFBaUIsRUFBRUcsaUJBRnJCO0FBR0UsUUFBQSxhQUFhLEVBQUVGLGFBSGpCO0FBSUUsUUFBQSxPQUFPLEVBQUVNLE9BSlg7QUFLRSxRQUFBLFlBQVksRUFBRUw7QUFMaEIsUUFERixFQVFHRixnQkFBZ0IsZ0JBQUcsZ0NBQUMsV0FBRDtBQUFhLFFBQUEsT0FBTyxFQUFFTztBQUF0QixRQUFILEdBQXVDLElBUjFELENBRDJCO0FBQUEsS0FBNUIsQ0FESCxDQVB3QjtBQUFBLEdBQTFCOztBQXVCQSxTQUFPVCxpQkFBUDtBQUNEOztlQUVjTix3QiIsInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgMjAyMCBVYmVyIFRlY2hub2xvZ2llcywgSW5jLlxuLy9cbi8vIFBlcm1pc3Npb24gaXMgaGVyZWJ5IGdyYW50ZWQsIGZyZWUgb2YgY2hhcmdlLCB0byBhbnkgcGVyc29uIG9idGFpbmluZyBhIGNvcHlcbi8vIG9mIHRoaXMgc29mdHdhcmUgYW5kIGFzc29jaWF0ZWQgZG9jdW1lbnRhdGlvbiBmaWxlcyAodGhlIFwiU29mdHdhcmVcIiksIHRvIGRlYWxcbi8vIGluIHRoZSBTb2Z0d2FyZSB3aXRob3V0IHJlc3RyaWN0aW9uLCBpbmNsdWRpbmcgd2l0aG91dCBsaW1pdGF0aW9uIHRoZSByaWdodHNcbi8vIHRvIHVzZSwgY29weSwgbW9kaWZ5LCBtZXJnZSwgcHVibGlzaCwgZGlzdHJpYnV0ZSwgc3VibGljZW5zZSwgYW5kL29yIHNlbGxcbi8vIGNvcGllcyBvZiB0aGUgU29mdHdhcmUsIGFuZCB0byBwZXJtaXQgcGVyc29ucyB0byB3aG9tIHRoZSBTb2Z0d2FyZSBpc1xuLy8gZnVybmlzaGVkIHRvIGRvIHNvLCBzdWJqZWN0IHRvIHRoZSBmb2xsb3dpbmcgY29uZGl0aW9uczpcbi8vXG4vLyBUaGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSBhbmQgdGhpcyBwZXJtaXNzaW9uIG5vdGljZSBzaGFsbCBiZSBpbmNsdWRlZCBpblxuLy8gYWxsIGNvcGllcyBvciBzdWJzdGFudGlhbCBwb3J0aW9ucyBvZiB0aGUgU29mdHdhcmUuXG4vL1xuLy8gVEhFIFNPRlRXQVJFIElTIFBST1ZJREVEIFwiQVMgSVNcIiwgV0lUSE9VVCBXQVJSQU5UWSBPRiBBTlkgS0lORCwgRVhQUkVTUyBPUlxuLy8gSU1QTElFRCwgSU5DTFVESU5HIEJVVCBOT1QgTElNSVRFRCBUTyBUSEUgV0FSUkFOVElFUyBPRiBNRVJDSEFOVEFCSUxJVFksXG4vLyBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBTkQgTk9OSU5GUklOR0VNRU5ULiBJTiBOTyBFVkVOVCBTSEFMTCBUSEVcbi8vIEFVVEhPUlMgT1IgQ09QWVJJR0hUIEhPTERFUlMgQkUgTElBQkxFIEZPUiBBTlkgQ0xBSU0sIERBTUFHRVMgT1IgT1RIRVJcbi8vIExJQUJJTElUWSwgV0hFVEhFUiBJTiBBTiBBQ1RJT04gT0YgQ09OVFJBQ1QsIFRPUlQgT1IgT1RIRVJXSVNFLCBBUklTSU5HIEZST00sXG4vLyBPVVQgT0YgT1IgSU4gQ09OTkVDVElPTiBXSVRIIFRIRSBTT0ZUV0FSRSBPUiBUSEUgVVNFIE9SIE9USEVSIERFQUxJTkdTIElOXG4vLyBUSEUgU09GVFdBUkUuXG5cbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCBzdHlsZWQgZnJvbSAnc3R5bGVkLWNvbXBvbmVudHMnO1xyXG5cclxuaW1wb3J0IHtTaWRlUGFuZWxTZWN0aW9ufSBmcm9tICdjb21wb25lbnRzL2NvbW1vbi9zdHlsZWQtY29tcG9uZW50cyc7XHJcbmltcG9ydCBEYXRhc2V0VGl0bGVGYWN0b3J5IGZyb20gJ2NvbXBvbmVudHMvc2lkZS1wYW5lbC9jb21tb24vZGF0YXNldC10aXRsZSc7XHJcbmltcG9ydCBEYXRhc2V0SW5mb0ZhY3RvcnkgZnJvbSAnY29tcG9uZW50cy9zaWRlLXBhbmVsL2NvbW1vbi9kYXRhc2V0LWluZm8nO1xyXG5cclxuY29uc3QgU291cmNlRGF0YUNhdGFsb2dXcmFwcGVyID0gc3R5bGVkLmRpdmBcclxuICB0cmFuc2l0aW9uOiAke3Byb3BzID0+IHByb3BzLnRoZW1lLnRyYW5zaXRpb259O1xyXG5gO1xyXG5cclxuU291cmNlRGF0YUNhdGFsb2dGYWN0b3J5LmRlcHMgPSBbRGF0YXNldFRpdGxlRmFjdG9yeSwgRGF0YXNldEluZm9GYWN0b3J5XTtcclxuXHJcbmZ1bmN0aW9uIFNvdXJjZURhdGFDYXRhbG9nRmFjdG9yeShEYXRhc2V0VGl0bGUsIERhdGFzZXRJbmZvKSB7XHJcbiAgY29uc3QgU291cmNlRGF0YUNhdGFsb2cgPSAoe1xyXG4gICAgZGF0YXNldHMsXHJcbiAgICBzaG93RGF0YXNldFRhYmxlLFxyXG4gICAgcmVtb3ZlRGF0YXNldCxcclxuICAgIG9uVGl0bGVDbGljayxcclxuICAgIHNob3dEZWxldGVEYXRhc2V0ID0gZmFsc2VcclxuICB9KSA9PiAoXHJcbiAgICA8U291cmNlRGF0YUNhdGFsb2dXcmFwcGVyIGNsYXNzTmFtZT1cInNvdXJjZS1kYXRhLWNhdGFsb2dcIj5cclxuICAgICAge09iamVjdC52YWx1ZXMoZGF0YXNldHMpLm1hcCgoZGF0YXNldCwgaW5kZXgpID0+IChcclxuICAgICAgICA8U2lkZVBhbmVsU2VjdGlvbiBrZXk9e2RhdGFzZXQuaWR9PlxyXG4gICAgICAgICAgPERhdGFzZXRUaXRsZVxyXG4gICAgICAgICAgICBzaG93RGF0YXNldFRhYmxlPXtzaG93RGF0YXNldFRhYmxlfVxyXG4gICAgICAgICAgICBzaG93RGVsZXRlRGF0YXNldD17c2hvd0RlbGV0ZURhdGFzZXR9XHJcbiAgICAgICAgICAgIHJlbW92ZURhdGFzZXQ9e3JlbW92ZURhdGFzZXR9XHJcbiAgICAgICAgICAgIGRhdGFzZXQ9e2RhdGFzZXR9XHJcbiAgICAgICAgICAgIG9uVGl0bGVDbGljaz17b25UaXRsZUNsaWNrfVxyXG4gICAgICAgICAgLz5cclxuICAgICAgICAgIHtzaG93RGF0YXNldFRhYmxlID8gPERhdGFzZXRJbmZvIGRhdGFzZXQ9e2RhdGFzZXR9IC8+IDogbnVsbH1cclxuICAgICAgICA8L1NpZGVQYW5lbFNlY3Rpb24+XHJcbiAgICAgICkpfVxyXG4gICAgPC9Tb3VyY2VEYXRhQ2F0YWxvZ1dyYXBwZXI+XHJcbiAgKTtcclxuXHJcbiAgcmV0dXJuIFNvdXJjZURhdGFDYXRhbG9nO1xyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBTb3VyY2VEYXRhQ2F0YWxvZ0ZhY3Rvcnk7XHJcbiJdfQ==